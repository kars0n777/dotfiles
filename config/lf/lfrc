set ratios 1:2:3
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/preview
# Basic Settings
set preview true 
#set hidden true 
set icons true 
set ignorecase true
#set drawbox true
# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd setwallpaper %cp "$f" ~/.config/wall.png && xwallpaper --zoom "$f"

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}


cmd dragon %dragon-drag-and-drop -a -x $fx
cmd dragon-stay %dragon-drag-and-drop -a $fx
cmd dragon-individual %dragon-drag-and-drop $fx
cmd cpdragon %cpdragon
cmd mvdragon %mvdragon
cmd dlfile %dlfile

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

#cmd stripspace %stripspace "$f"

# Bindings
# Remove some defaults
map m
map o
map "'"
map '"'
map d
map c
map e
map f
map sc
map sa
map sn
map ss

# File Openers
map ee $$EDITOR "$f"
map u $view "$f"

# Archive Mappings
map az zip
map at tar
map ag targz map ab targz
map au unarchive
map aU unzip

# Trash Mappings
map dd trash
map tc clear_trash
map tr restore_trash

# Broot Mapping
map f broot_jump

# Dragon Mapping
map dr dragon
map ds dragon-stay
map di dragon-individual
map dm mvdragon
map dc cpdragon
map dl dlfile

# Basic Functions
map <backspace2> set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map ch chmod
map bg setwallpaper
map br $vimv $fx
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect

# Movement
map gv cd ~/videos
map gt cd ~/torrent
map gT cd ~/.local/share/torbrowser/tbb/x86_64/tor-browser_en-US/Browser/Downloads/
map gp cd ~/pictures
map gC cd ~/pictures/screen
map gw cd ~/pictures/wallpapers
map gD cd ~/documents
map gd cd ~/downloads
map ga cd ~/audio
map gm cd ~/audio/music
map gb cd ~/books
map gM cd ~/pictures/meme
map gn cd ~/nextcloud/
map gs cd ~/videos/shows/
map gS cd ~/scripts
map gi cd ~/iso-files/
map gc cd ~/.config
map gl cd ~/.local
map gu cd ~/git/karson777/suckless
map go cd ~/videos/ffmpeg
map gO cd ~/git/karson777/dotfiles
map gy cd ~/videos/youtube/
map gG cd ~/git/
map gP cd ~/gimp
map gk cd ~/kdenlive
map gK cd ~/pictures/temp
map gE cd ~/emulation

map g/ cd /
map gr cd /run/media/karson777
map gN cd /mnt/
map gU cd /usr
map gU cd /usr/share
map ge cd /etc/

map \;j cd ~
